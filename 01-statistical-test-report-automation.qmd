---
title: "Statistical Testing Results"
subtitle: "Company ABC"
author: "Zion & Zion"
date: last-modified
date-format: "MM-DD-YYYY"
description: "A/B Testing Results"
title-block-banner: "#FFFFFF"
format: 
  html:
    self_contained: true
    page-layout: full
    embed-resources: true
    smooth-scroll: true
    fontcolor: black
    toc: true
    toc-location: left
    toc-title: Summary
    toc-depth: 3
theme:
  - journal
  - styles/theme-custom.scss
css: styles/styles.css
  
params:
  sample_size_A: 10000
  success_A: 1984
  sample_size_B: 10000
  success_B: 1950
  
  visitors_A: 80000
  conversions_A: 1600
  confidence_level: 0.90
  
  visitors_B: 80000
  conversions_B: 1700
---

```{r setup, include=FALSE}
# install.packages("BayesFactor")
library(BayesFactor)
library(tidyverse)
theme_set(theme_minimal())

# Using a uniform prior Beta(1,1)
prior <- c(1, 1)

# Calculating posterior distributions
post_A <- c(params$success_A + prior[1], params$sample_size_A - params$success_A + prior[2])
post_B <- c(params$success_B + prior[1], params$sample_size_B - params$success_B + prior[2])

# Simulating from the posterior distributions
set.seed(123)
sim_A <- rbeta(10000, post_A[1], post_A[2])
sim_B <- rbeta(10000, post_B[1], post_B[2])

# Probability that B is better than A
prob_B_better_than_A <- mean(sim_B > sim_A)
```

## Overview

Company ABC has been experiencing a decline in the number of conversions on their website in the last six months. The marketing team has been tasked with increasing the number of conversions. 

The team has decided on a new landing page to determine if it will increase the number of conversions. 

Zion & Zion ran an A/B test to determine if a new landing page would increase the number of conversions. 

The test was run for 30 days and the results are as follows:

## Test Results

::: {.panel-tabset}

## Bayesian Test

The probability that the new landing page (B) is better than the existing page (A) is `r round(prob_B_better_than_A, 3)*100`%.

The following histograms show the posterior distributions for the conversion rates of the two landing pages:

```{r echo=FALSE, fig.width=9, fig.height=4.5, warning=FALSE, message=FALSE}
max_x_lim <- max(max(sim_A), max(sim_B))
min_x_lim <- min(min(sim_A), min(sim_B))


# Create a sequence of conversion rates
x <- seq(0, 1, length.out = 1000)

# Calculate densities
density_A <- dbeta(x, post_A[1], post_A[2])
density_B <- dbeta(x, post_B[1], post_B[2])

# Create a data frame for plotting
df <- data.frame(x, Group_A = density_A, Group_B = density_B)

# Plotting
df |>
  ggplot(aes(x)) +
  geom_line(aes(y = Group_A, colour = "Group A"), linewidth = 0.8) +
  geom_line(aes(y = Group_B, colour = "Group B"), linewidth = 0.8) +
  labs(
    title = NULL,
    x     = "Conversion Rate", y = "Density") +
  scale_colour_manual(
    "",
    breaks = c("Group A", "Group B"),
    values = c("Group A" = "#2E465F", "Group B" = "#D81B60")
  ) +
  xlim(min_x_lim, max_x_lim) +
  theme(
    legend.position = "bottom"
    )
```

```{r, include=FALSE, warning=FALSE, message=FALSE}
rate_A <- params$conversions_A / params$visitors_A
rate_B <- params$conversions_B / params$visitors_B

# Pooled conversion rate
overall_rate <- (params$conversions_A + params$conversions_B) / (params$visitors_A + params$visitors_B)

# Z-Score for p-value calculation
z_score <- (rate_B - rate_A) / sqrt(overall_rate * (1 - overall_rate) * (1/params$visitors_A + 1/params$visitors_B))

# P-Value for a one-sided test
p_value <- pnorm(z_score, lower.tail = FALSE)

# Z-Score for 90% Confidence Level (One-Sided)
z_score_CL <- qnorm(params$confidence_level)

# Confidence Interval for Variation A
se_A <- sqrt(rate_A * (1 - rate_A) / params$visitors_A)
ci_lower_A <- rate_A - z_score_CL * se_A
ci_upper_A <- rate_A + z_score_CL * se_A

# Confidence Interval for Variation B
se_B <- sqrt(rate_B * (1 - rate_B) / params$visitors_B)
ci_lower_B <- rate_B - z_score_CL * se_B
ci_upper_B <- rate_B + z_score_CL * se_B

```

## Frequentist Test

**Test Specifications:**

    - Confidence level is `r params$confidence_level*100`%.

    - Reject the NULL hypothesis if the P-Value is less than `r 1-params$confidence_level`.

    - The P-Value for a one-sided test is `r round(p_value, 3)`.

90% Confidence Interval for Variation A is `r round(ci_lower_A, 3)*100`% to `r round(ci_upper_A, 3)*100`%.

90% Confidence Interval for Variation B is `r round(ci_lower_B, 3)*100`% to `r round(ci_upper_B, 3)*100`%.

```{r include=FALSE, warning=FALSE, message=FALSE}
# Define labels and errors for the confidence intervals
labels <- c('Control', 'Variant 1')
conversion_rates <- c(rate_A, rate_B)
ci_lower_bounds <- c(ci_lower_A, ci_lower_B)
ci_upper_bounds <- c(ci_upper_A, ci_upper_B)
errors <- c(ci_upper_A - rate_A, ci_upper_B - rate_B)

# Create a data frame for plotting
data <- data.frame(
  Variation = factor(labels, levels = rev(labels)),
  ConversionRate = conversion_rates,
  CIError = errors,
  Lower = ci_lower_bounds,
  Upper = ci_upper_bounds
)

max_y_lim <- max(data$Upper)
```

**Confidence intervals**

```{r echo=FALSE, fig.width=9, fig.height=4.5, warning=FALSE, message=FALSE}
my_colors <- c("#2E465F", "#D81B60")

# Create the horizontal bar plot with confidence intervals
p <- ggplot(data, aes(x = Variation, y = ConversionRate)) +
  geom_bar(stat = "identity", aes(fill = Variation), position = position_dodge(),
           show.legend = FALSE, alpha = 0.8) +
  geom_errorbar(aes(ymin = ConversionRate - CIError, ymax = ConversionRate + CIError), width = 0.15, alpha = 0.8) +
  coord_flip() +  # Flip the coordinates to make the bars horizontal
  labs(
    title = NULL,
    x     = NULL, y = "Conversion Rate"
  ) + 
  ylim(0, max_y_lim *1.15) +
  theme_minimal() +
  theme(
    legend.position = "none"
    ) +
    scale_fill_manual(values = my_colors)

# Adding the confidence intervals as text on the bars
p <- 
  p + geom_text(
    aes(x = Variation, y = ConversionRate + CIError,
        label = paste(sprintf('%.1f%%', Lower * 100), '-', sprintf('%.1f%%', Upper * 100))),
    position = position_dodge(0.9), hjust = -0.2,
    alpha = 0.85)

# Print the plot
p
```


:::